#! /bin/zsh

# Define common color codes and unicode characters
green="\033[0;32m"
red="\033[0;31m"
nc="\033[0m"
check="$green✓$nc"
mark="$red✗$nc"

header () {
    text="### $@ ###"
    echo "$green"
    python3 -c "print('#' * ${#text})"
    echo $text
    python3 -c "print('#' * ${#text})"
    echo "$nc"
}

print_if_found () {
    found=$2
    name=$1
    [ $found -eq 0 ] && echo "$check $name" || echo "$mark $name" 
    return $found
}

installed () {
    name=$1
    if test -d "$HOME/.$name"; then
        print_if_found $name $?
    elif test -d "$ZSH_CUSTOM/themes/$name"; then
        print_if_found $name $?
    elif test -d "$ZSH_CUSTOM/plugins/$name"; then
        print_if_found $name $?
    elif test -d ".config/$name"; then
        print_if_found $name $?
    else
        HAS_ALLOW_UNSAFE=y has $name
    fi
}


brew_install_if_missing () {
    for program in "$@"
    do
        if ! installed $program; then
            echo "Installing $program"
            brew install $program
            installed $program
        fi
    done
}

install_zsh_plugin () {
    name=$1
    repo=$1
    [! test -d $ZSH_CUSTOM/plugins/$name]
}

install_font () {
    fontName=$1
    downloadUrl=$2
    if ! test -f "$HOME/Library/Fonts/$fontName"; then
        print_if_found "Font $fontName" 1
        curl -L --output "$fontName" $downloadUrl
        mv "$fontName" "$HOME/Library/Fonts/$fontName"
    else
        print_if_found "Font $fontName" 0
    fi

}

# Change
yadm remote set-url origin git@github.com:pthurston/dot-files.git

source $HOME/.zshenv # Make sure that XDG location variables are sourced

header "Core Utilities"

# Install "has" command to check for existing applications
if ! test -f /usr/local/bin/has; then
    curl -sL https://git.io/_has > /usr/local/bin/has
    chmod +x /usr/local/bin/has
fi

# Install Homebrew
if ! installed brew; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    installed brew
fi 

# ! has zsh && brew install zsh
brew_install_if_missing zsh openssh git

header "ZSH / Oh-My-ZSH"

# Install Oh-My-ZSH
if ! installed oh-my-zsh; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    installed oh-my-zsh
fi

export ZSH=~/.oh-my-zsh
export ZSH_CUSTOM="$ZSH/custom"

install_font "MesloLGS NF Regular.ttf" "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf"
install_font "MesloLGS NF Bold.ttf" "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf"
install_font "MesloLGS NF Italic.ttf" "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf"
install_font "MesloLGS NF Bold Italic.ttf" "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf"


# Install Powerlevel10k theme
if ! installed powerlevel10k; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k
    installed powerlevel10k
fi

if ! installed zsh-syntax-highlighting; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting
    installed zsh-syntax-highlighting
fi

if ! installed zsh-autosuggestions; then
    git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
    installed zsh-autosuggestions
fi

header "CLI Tools"

brew_install_if_missing micro

if ! installed micro/plug/editorconfig; then
    git clone https://github.com/10sr/editorconfig-micro "$XDG_CONFIG_HOME/micro/plug/editorconfig"
    installed micro/plug/editorconfig
fi

if ! installed micro/plug/micro-autofmt; then
    git clone https://github.com/a11ce/micro-autofmt.git "$XDG_CONFIG_HOME/micro/plug/micro-autofmt"
    installed micro/plug/editorconfig
fi

if ! installed aws; then
    curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
    sudo installer -pkg AWSCLIV2.pkg -target /
    rm AWSCLIV2.pkg
    installed aws
fi

brew tap common-fate/granted
brew_install_if_missing granted

header "asdf & runtimes"

if ! installed asdf; then 
	git clone https://github.com/asdf-vm/asdf.git ${ASDF_DIR:-~/.asdf} --branch v0.14.0
	installed asdf
fi

if ! installed python; then
	asdf plugin add python https://github.com/danhper/asdf-python.git
	asdf install python latest
	asdf global python latest
	installed python
fi

if ! installed node; then 
	asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
	asdf install nodejs latest
	asdf global nodejs latest
	installed node
fi

if ! installed go; then 
	asdf plugin add golang https://github.com/asdf-community/asdf-golang.git
	asdf install golang latest
	asdf global golang latest
	installed go
fi

if ! installed direnv; then 
	asdf plugin add direnv https://github.com/asdf-community/asdf-direnv.git
	asdf install direnv latest
	asdf global direnv latest
	installed direnv
fi

header "Applications"

brew bundle

# Tell postgres and other services to run automatically on startup
brew services start postgresql@15

# Reload shell config
source ~/.zshenv
source ~/.zshrc